name: 'Terraform Deploy to Azure'
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      - dev
env:
  TF_LOG: TRACE, DEBUG, INFO, WARN, ERROR
  working-directory: './terraform/'
jobs:
  terraform:
    permissions:
      id-token: write
      issues: write
      pull-requests: write
      contents: read
    environment: dev
    name: 'Terraform Deploy'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache Terraform
        uses: actions/cache@v4
        with:
          path: |
            ~/.terraform.d/plugin-cache
            .terraform
          key: ${{ runner.os }}-terraform-${{ hashFiles('**/*.tf') }}
          restore-keys: |
            ${{ runner.os }}-terraform-
        

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        env:
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}
          STORAGE_ACCOUNT_NAME: ${{ secrets.STORAGE_ACCOUNT_NAME }}
          ARM_USE_OIDC: true
        with:
          terraform_wrapper: false

      - name: Azure Login with OIDC
        uses: azure/login@v2.2.0
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true

      - name: Azure CLI
        uses: azure/CLI@v2.1.0
        with:
          azcliversion: latest
          inlineScript: |
                az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}
                az configure --defaults group=${{ secrets.AZURE_RESOURCE_GROUP }} location=${{ secrets.AZURE_LOCATION }}
                az account show --output table

      - name: List Directory
        run: ls -la
        working-directory: ${{ env.WORKING_DIRECTORY }}

      - name: Terraform Init
        run: terraform init
        working-directory: ${{ env.WORKING_DIRECTORY }}
        env:
          TF_VAR_storage_account_name: ${{ secrets.STORAGE_ACCOUNT_NAME }}
          TF_VAR_resource_group_name: ${{ secrets.AZURE_RESOURCE_GROUP }}

      - name: Terraform Format
        run: terraform fmt -check
        working-directory: ${{ env.WORKING_DIRECTORY }}

      - name: Terraform Validate
        run: terraform validate
        working-directory: ${{ env.WORKING_DIRECTORY }}

      - name: Terraform Plan
        id: plan
        run: terraform plan -out=tfplan -no-color
        working-directory: ${{ env.WORKING_DIRECTORY }}

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -file=tfplan -no-color -auto-approve
        working-directory: ${{ env.WORKING_DIRECTORY }}
        env:
          TF_VAR_storage_account_name: ${{ secrets.STORAGE_ACCOUNT_NAME }}
          TF_VAR_resource_group_name: ${{ secrets.AZURE_RESOURCE_GROUP }}